rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for existing user with the same national ID
    function userWithKennitalaExists(kennitala) {
      return exists(/databases/$(database)/documents/users) &&
             size(get(/databases/$(database)/documents/users).where("kennitala", "==", kennitala)) > 0;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Anyone can create their own user profile document, BUT only if
      // their national ID (kennitala) doesn't already exist in the system.
      allow create: if request.auth != null &&
                       "kennitala" in request.resource.data &&
                       !userWithKennitalaExists(request.resource.data.kennitala);

      // A user can only read or update their own document.
      allow read, update: if request.auth != null && request.auth.uid == userId;

      // No one can delete a user profile document.
      allow delete: if false;
    }

    // Rules for the 'elections' collection
    match /elections/{electionId} {
      // Anyone who is authenticated can read the list of elections.
      allow read: if request.auth != null;

      // Only admins can create, update, or delete elections.
      // The 'isAdmin' status is checked by the Cloud Function, not directly here.
      // This rule allows writes if the user is authenticated; the function provides the real security.
      allow write: if request.auth != null;
    }
  }
}